text(20,20)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Vamos a balancear usando la técnica del inframuestreo
#Comprobamos la penetración exacta de la target
count(df,Failure)
#Vamos a balancear usando la técnica del inframuestreo
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
dim(df_nos)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
dim(df_red)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
count(df_red,Failure)
81/nrow(df_red) * 100
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 21 es Failure
formula <- reformulate(indep,target)
formula
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
df_nos <- df %>%
filter(Failure == 'No') %>%
seed(1234) %>% para que nos salga lo mismo
sample_frac(size = 0.08)
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
df <- df %>%
select(-contains('Date'))
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
seed(1234) %>% para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
glimpse(df)
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
options(scipen=999)#Desactiva la notacion cientifica
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 21 es Failure
formula <- reformulate(indep,target)
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
df$scoring <- predict(rl,df,type='response')
summary(df$scoring)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 3 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.1,1,0)
table(df$prediccion,df$Failure)
ggplot(df,aes(scoring)) + geom_density()
ggplot(df,aes(scoring)) + geom_density() + scale_x_continuous(limits = c(0,0.2))
filter(df,scoring > 0.1) %>% n()
filter(df,scoring > 0.1) %>% n(.)
filter(df,scoring > 0.1) %>% nrow()
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 10 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.2,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 10 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.1,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 20 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.2,1,0)
table(df$prediccion,df$Failure)
filter(df,scoring > 0.99) %>% nrow()
filter(df,scoring > 0.9) %>% nrow()
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 20 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 20 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.7,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 20 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.7,1,0)
table(df$prediccion,df$Failure)
#Como la penetración inicial era del 1%, vamos a decir que sí será un fallo cuando el scoring esté 20 veces por encima de la media
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
table(df$prediccion,df$Failure)
?print
options(scipen=999)#Desactiva la notacion cientifica
options(scipen=999)#Desactiva la notacion cientifica
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
options(scipen=999)#Desactiva la notacion cientifica
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
#Visión general
glimpse(df)
skim(df)
skim(df)
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
glimpse(df)
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3))
glimpse(df)
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50)
glimpse(df)
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
8699 * 0.08
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
dim(df_nos)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
names(df_red)
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es Failure
target
indep
formula <- reformulate(indep,target)
formula
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
summary(rl) #Vemos el resultado
indep_fin <- c('Temperature','Humidity','Measure9')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
formula
rl <- glm(formula,df_red,family=binomial(link='logit'))
summary(rl) #Vemos el resultado
df$scoring <- predict(rl,df,type='response')
head(df$scoring)
#Como la penetración inicial era del 1%, vamos a poner un punto de corte muy alto, por ejemplo por encima del 80%
df$prediccion <- ifelse(df$scoring > 0.8,1,0)
head(df$prediccion)
table(df$prediccion)
table(df$prediccion,df$Failure)
#Vamos a ver qué pasa si bajamos la decisión al 60%
df$prediccion <- ifelse(df$scoring > 0.6,1,0)
table(df$prediccion,df$Failure)
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
2.Cargamos los datos
```{r}
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
```
3.Análisis inicial
```{r}
#Visión general
glimpse(df)
skim(df)
```
Conclusiones:
No hay nulos
Problemas con tipos de variables:
- Measure2 y Measure3 también parecen más factores que enteros
- Viendo el mínimo y el p25 de Temperature parece que tiene atípicos
Analizamos en mayor detalle la tempertura
```{r}
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
```
Conclusión: efectivamente vemos que son sólo 4 puntos
4.Calidad de datos
```{r}
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
```
5.Análisis exploratorio de variables (EDA)
```{r}
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Instalar librerías
install.packages('dplyr') #para manipular datos
install.packages('skimr') #para exploración inicial
#Instalar librerías
install.packages('dplyr') #para manipular datos
install.packages('skimr') #para exploración inicial
install.packages('lubridate') #para manipular fechas
install.packages('tidyr') #para manipular datos
install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
2+2
df = read.csv("..\project/DataSetFallosMaquina.csv", head = T)
df = read.csv("../project/DataSetFallosMaquina.csv", head = T)
df = read.csv("../project/DataSetFallosMaquina.csv", head = T, sep = ";")
View(df)
df = read.csv(file = "../project/DataSetFallosMaquina.csv", head = T, sep = ";")
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
glimpse(df)
skim(df)
skim(df)
glimpse(df)
skim(df)
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
ggplot(df,x=1)
geom_boxplot(aes(y=Temperature))
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
boxplot(df[:1],main="Datos temperatura")
df[:1]
df
df["Temperature"]
boxplot(df["Temperature"],main="Datos temperatura")
boxplot(df["Temperature"],main="Datos temperatura", ylab="Temperatura")
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
#Corregimos los tipos de variables y los atípicos
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
glimpse(df) # Tipos de Datos de df
skim(df) # Cuadro con todas las medidas estadisticas basicas
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))
#Exploramos las de tipo factor
df %>%
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
View(df_red)
options(scipen=999)#Desactiva la notacion cientifica
#Instalar librerías
#install.packages('dplyr') #para manipular datos
#install.packages('skimr') #para exploración inicial
#install.packages('lubridate') #para manipular fechas
#install.packages('tidyr') #para manipular datos
#install.packages('ggplot2') #para hacer gráficos
#Cargar librerías
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
df = read.csv(file = "../project/DataSetFallosMaquina.csv", head = T, sep = ";")
glimpse(df) # Tipos de Datos de df
skim(df) # Cuadro con todas las medidas estadisticas basicas
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
#boxplot(df["Temperature"],main="Datos temperatura", ylab="Temperatura")
#Corregimos los tipos de variables y los atípicos "%>%" une varios operaciones en una (concatena)
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperature
#Exploramos las de tipo factor
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Hacemos análisis de correlaciones
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
#Hacemos un zoom sobre el desbalanceo de la variable target
table(df$Failure)
#Vamos a balancear usando la técnica del inframuestreo:
#Comprobamos la penetración exacta de la target
#Tenemos 81 sis que sobre el total de casos son un 0,9%:
81/nrow(df) * 100
#Para tener casi un 10% necesitaríamos incrementar la proporción aprox en x10
#Entonces vamos a reducir los nos para que salga aprox esa proporción
#Nuevo df de nos
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No') %>%
sample_frac(size = 0.08)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
